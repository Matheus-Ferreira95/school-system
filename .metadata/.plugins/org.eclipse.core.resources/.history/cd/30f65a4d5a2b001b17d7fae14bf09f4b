package com.matheusf.project.domain;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.stream.Collectors;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.OneToMany;
import javax.persistence.Table;

@Entity
@Table(name="tb_aluno")
public class Aluno implements Serializable{
	private static final long serialVersionUID = 1L;

	@Column(unique = true)
	private String cpf;
	
	private String nome;
	private Date nascimento;
	
	@OneToMany(mappedBy="id.aluno")
	private List<Matricula> turmas = new ArrayList<>();
	
	public Aluno() {
	}

	public Aluno(String cpf, String nome, Date nascimento) {	
		this.cpf = cpf;
		this.nome = nome;
		this.nascimento = nascimento;		
	}

	public String getCpf() {
		return cpf;
	}

	public void setCpf(String cpf) {
		this.cpf = cpf;
	}

	public String getNome() {
		return nome;
	}

	public void setNome(String nome) {
		this.nome = nome;
	}

	public Date getNascimento() {
		return nascimento;
	}

	public void setNascimento(Date nascimento) {
		this.nascimento = nascimento;
	}

	public List<Turma> getTurmas() {
		return turmas.stream()
				.map(matricula -> matricula.getTurma()).collect(Collectors.toList());
	}

	public void setTurmas(List<Matricula> turmas) {
		this.turmas = turmas;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((cpf == null) ? 0 : cpf.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Aluno other = (Aluno) obj;
		if (cpf == null) {
			if (other.cpf != null)
				return false;
		} else if (!cpf.equals(other.cpf))
			return false;
		return true;
	}
}